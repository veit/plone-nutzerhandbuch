[buildout]
parts = 
    migration

extends =
    http://dist.plone.org/release/4.0.5/versions.cfg

versions = versions

extensions =
    mr.developer
    buildout.dumppickedversions
 
dump-picked-versions-file = picked.cfg
sources = sources
sources-dir = ${buildout:directory}/src
auto-checkout =
allow-picked-versions = true

[sources]
transmogrify.webcrawler = git git://github.com/djay/transmogrify.webcrawler.git
transmogrify.pathsorter = git git://github.com/djay/transmogrify.pathsorter.git
transmogrify.htmltesting = git git://github.com/djay/transmogrify.htmltesting.git
transmogrify.siteanalyser = git git://github.com/djay/transmogrify.siteanalyser.git
transmogrify.htmltesting = git git://github.com/djay/transmogrify.htmltesting.git
transmogrify.ploneremote = git git://github.com/djay/transmogrify.ploneremote.git
transmogrify.htmlcontentextractor = git git://github.com/djay/transmogrify.htmlcontentextractor.git
funnelweb = git git://github.com/collective/funnelweb.git

[migration]
recipe = funnelweb
crawler-url=file://${buildout:directory}/docs/html
crawler-ignore=
	cgi-bin
	javascript:
	_static
	_sources
	genindex\.html
	search\.html
	saesrchindex\.js

cache-output =

template1-title = text //div[@class='body']//h1[1]
template1-_permalink = text //div[@class='body']//a[@class='headerlink']
template1-text = html //div[@class='body']
template1-_label = optional //p[contains(@class,'admonition-title')]
template1-description = optional //div[contains(@class,'admonition-description')]/p[@class='last']/text()
template1-_remove_useless_links = optional //div[@id = 'indices-and-tables']
templateauto-condition = python:False

# Images will get titles from backlink text
titleguess-condition = python:True
indexguess-condition = python:True

# Hide the images folder from navigation
hideguess-condition = python:item.get("_path","").startswith('_images') and item.get('_type')=='Folder'

# Upload as PHC instead of Folders and Pages 
changetype-value=python:{'Folder':'HelpCenterReferenceManualSection','Document':'HelpCenterLeafPage'}.get(item['_type'],item['_type'])

# All folderish content should be checked if they contain any items on the
# remote site which are not presented locally. including base folder
ploneprune-condition=python:item.get('_type') in ['HelpCenterReferenceManualSection','HelpCenterReferenceManual'] or item['_path'] == ''

[test]
recipe = zc.recipe.testrunner
eggs =
  ${migration:eggs}
  transmogrify.htmltesting

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml

[versions]
BeautifulSoup = 3.2.0
collective.transmogrifier = 1.3
funnelweb = 1.0b7
transmogrify.htmlcontentextractor = 1.0b4
transmogrify.pathsorter = 1.0b3
transmogrify.ploneremote = 1.0b3
transmogrify.siteanalyser = 1.0b8
transmogrify.webcrawler = 1.0b7

